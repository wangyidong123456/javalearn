<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igeek.mybatis.mapper.TbOrderMapper">

	<!-- 实现查询tb_order的数据条数 -->
	<!-- public int queryTbOrderCount(); -->
	<select id="queryTbOrderCount" resultType="int">
		SELECT COUNT(*) FROM
		tb_order
	</select>

	<!-- 使用包装对象，根据用户id查询该用户的所有已付款的订单 -->
	<!-- public List<TbOrder> queryTbOrderByQueryVo(QueryVo queryVo); -->
	<select id="queryTbOrderByQueryVo" parameterType="com.igeek.mybatis.pojo.QueryVo"
		resultType="com.igeek.mybatis.pojo.TbOrder">
		SELECT * FROM tb_order WHERE userId=#{user.id} AND status=2
	</select>

	<!-- 根据订单金额payment查询订单，一对一关联用户数据，使用自定义pojo实现 -->
	<!-- public List<TbOrderUser> queryTbOrderUser(Map<String, Object> map); -->
	<select id="queryTbOrderUser" parameterType="map"
		resultType="com.igeek.mybatis.pojo.TbOrderUser">
		SELECT * FROM tb_order o LEFT JOIN `user` u ON
		o.userId=u.id WHERE payment
		BETWEEN #{min} AND #{max}
	</select>

	<resultMap type="com.igeek.mybatis.pojo.TbOrder" id="TbOrderResultMap">
		<id column="id" property="id" />

		<result column="payment" property="payment" />
		<result column="paymentType" property="paymentType" />
		<result column="postFee" property="postFee" />
		<result column="status" property="status" />
		<result column="createTime" property="createTime" />
		<result column="updateTime" property="updateTime" />
		<result column="paymentTime" property="paymentTime" />
		<result column="consignTime" property="consignTime" />
		<result column="endTime" property="endTime" />
		<result column="closeTime" property="closeTime" />
		<result column="userId" property="userId" />
		<result column="buyerMessage" property="buyerMessage" />
		<result column="buyerNick" property="buyerNick" />

		<association property="user" javaType="com.igeek.mybatis.pojo.User">
			<!-- 配置一对一的对象的主键 -->
			<id column="uid" property="id" />

			<!-- 配置一对一的对象的普通属性 -->
			<result column="username" property="username" />
			<result column="address" property="address" />
		</association>


	</resultMap>

	<!-- 根据订单金额payment查询订单，要一对一关联用户数据，使用resultMap实现 -->
	<!-- public List<TbOrder> queryTbOrder(Map<String, Object> map); -->
	<select id="queryTbOrder" parameterType="map" resultMap="TbOrderResultMap">
		SELECT
		o.id,
		o.payment,
		o.paymentType,
		o.postFee,
		o.status,
		o.createTime,
		o.updateTime,
		o.paymentTime,
		o.consignTime,
		o.endTime,
		o.closeTime,
		o.userId,
		o.buyerMessage,
		o.buyerNick,
		u.id uid,
		u.username,
		u.birthday,
		u.sex,
		u.address
		FROM
		tb_order o
		LEFT JOIN `user` u ON o.userId = u.id
		WHERE payment
		BETWEEN #{min} AND #{max}
	</select>

	<resultMap type="com.igeek.mybatis.pojo.User" id="UserResultMap">
		<id column="id" property="id" />

		<result column="username" property="username" />
		<result column="birthday" property="birthday" />
		<result column="sex" property="sex" />
		<result column="address" property="address" />

		<collection property="tbOrders" javaType="list"
			ofType="com.igeek.mybatis.pojo.TbOrder">
			<id column="oid" property="id" />

			<result column="payment" property="payment" />
			<result column="paymentType" property="paymentType" />
			<result column="postFee" property="postFee" />
			<result column="status" property="status" />
			<result column="createTime" property="createTime" />
			<result column="updateTime" property="updateTime" />
			<result column="paymentTime" property="paymentTime" />
			<result column="consignTime" property="consignTime" />
			<result column="endTime" property="endTime" />
			<result column="closeTime" property="closeTime" />
			<result column="userId" property="userId" />
			<result column="buyerMessage" property="buyerMessage" />
			<result column="buyerNick" property="buyerNick" />
		</collection>

	</resultMap>

	<!-- 根据id查询user，需要一对多关联tb_order -->
	<!-- public User queryUserById(int id); -->
	<select id="queryUserById" parameterType="long" resultMap="UserResultMap">
		SELECT
		o.id oid,
		o.payment,
		o.paymentType,
		o.postFee,
		o.status,
		o.createTime,
		o.updateTime,
		o.paymentTime,
		o.consignTime,
		o.endTime,
		o.closeTime,
		o.userId,
		o.buyerMessage,
		o.buyerNick,
		u.id,
		u.username,
		u.birthday,
		u.sex,
		u.address
		FROM
		`user` u
		LEFT JOIN tb_order o ON u.id =
		o.userId
		WHERE u.id=#{id}
	</select>

</mapper>