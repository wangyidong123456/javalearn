<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/aop 
                           http://www.springframework.org/schema/aop/spring-aop.xsd">
       <bean id="customerService" class="com.igeek.CustomerServiceImpl"></bean> 

	   <bean id="productService" class="com.igeek.ProductService"></bean>    
	   
	   <!-- 2.配置advice通知增强 -->
	   <bean id="myAspectAdvice" class="com.igeek.MyAspect"/>
	   
	   <!-- 配置aop -->
	   <aop:config>
	   		<!--切入点  -->
	   		<aop:pointcut expression="bean(*Service)" id="myPointcut"/>
	   		<!-- 切面 -->
	   		<aop:aspect ref="myAspectAdvice">
	   			<!-- 通知 -->
	   			<!-- <aop:before method="before" pointcut-ref="myPointcut"/> -->
	   			<!-- <aop:after-returning method="afterReturing" returning="returnVal" pointcut-ref="myPointcut"/> -->
	   			<!-- 环绕通知 -->
				<!-- <aop:around method="around" pointcut-ref="myPointcut"/> -->
	   			<!-- 抛出通知
				throwing:通知中的方法的第二个参数，异常类型的参数的名字，在运行的时候，spring会自动将异常传入该参数中。-->
				<!-- <aop:after-throwing method="afterThrowing" throwing="ex" pointcut-ref="myPointcut"/> -->	
	   			<!-- 最终通知 -->
				<aop:after method="after" pointcut-ref="myPointcut"/>
	   			
	   		</aop:aspect>
	   </aop:config>
	     
</beans>